{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/evaldas/Desktop/uiacademyTask/react-movies/src/components/header/Header.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { ReactComponent as Movie } from \"@svgr/webpack?-svgo,+titleProp,+ref!./icons/movie.svg\";\nimport { ReactComponent as Search } from \"@svgr/webpack?-svgo,+titleProp,+ref!./icons/search.svg\";\nimport SearchRez from '../search/SearchResults';\nimport MovieInfo from '../movie_info/MovieInfo';\nexport default function Header(props) {\n  _s();\n\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n  const APIKEY = '68ae61f2720168696df123e0c841e5d8';\n  const [searchText, setsearchText] = useState('');\n  const [data, setdata] = useState([]);\n  const [inputLength, setinputLength] = useState(1);\n  const [clicked, setclicked] = useState(false);\n  const text = '';\n  React.useEffect(function inputHandler() {\n    if (text === '') {}\n\n    console.log('hey');\n  }, [searchText]);\n\n  const inputHandler = e => {\n    text = e.target.value;\n    setsearchText(text);\n    setclicked(false);\n    setinputLength(text.length);\n    console.log(text);\n    console.log(searchText);\n\n    if (searchText !== '') {\n      let url = ''.concat(BASE_URL, 'search/movie?api_key=', APIKEY, '&query=', text);\n      console.log(url);\n      fetch(url).then(result => {\n        return result.json();\n      }).then(data => {\n        setdata(data.results);\n      }).catch(function (error) {\n        console.log('something went completely wrong');\n        return; // atvirai tai nezinau ar padetu nes error negavau ^^\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-wrap\",\n          children: [/*#__PURE__*/_jsxDEV(Movie, {\n            className: \"movie-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Movie Name\",\n            id: \"search\",\n            onChange: inputHandler,\n            value: searchText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Search, {\n          className: \"search-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchRez, {\n        data: data,\n        inputLength: inputLength,\n        selectionHandler: searchText => setsearchText(searchText),\n        inputTxt: searchText,\n        clicked: clicked,\n        selected: clicked => setclicked(clicked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n      movieinfo: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Header, \"VsgKQ11UsvN/By9g5tdD1eNqa0M=\");\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/home/evaldas/Desktop/uiacademyTask/react-movies/src/components/header/Header.jsx"],"names":["React","useState","useEffect","SearchRez","MovieInfo","Header","props","BASE_URL","APIKEY","searchText","setsearchText","data","setdata","inputLength","setinputLength","clicked","setclicked","text","inputHandler","console","log","e","target","value","length","url","concat","fetch","then","result","json","results","catch","error"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport {ReactComponent as Movie} from './icons/movie.svg'\nimport {ReactComponent as Search} from './icons/search.svg'\nimport SearchRez from '../search/SearchResults'\nimport MovieInfo from '../movie_info/MovieInfo'\n\nexport default function Header(props) {\n\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n  const APIKEY = '68ae61f2720168696df123e0c841e5d8';\n\n  const [searchText, setsearchText] = useState('');\n  const [data, setdata] = useState([]);\n  const [inputLength, setinputLength] = useState(1);\n  const [clicked, setclicked] = useState(false);\n  const text = '';\n\n    React.useEffect(function inputHandler() {\n      if(text === '') {\n        \n      }\n      console.log('hey')\n    },[searchText]);\n\n   const inputHandler = (e) => {\n    text = e.target.value;\n    setsearchText(text);\n    setclicked(false);\n    setinputLength(text.length);\n    console.log(text)\n    console.log(searchText)\n\n    if(searchText !== '' ){\n      let url = ''.concat(BASE_URL, 'search/movie?api_key=', APIKEY, '&query=', text);\n      console.log(url)\n      fetch(url)\n      .then((result) => {\n        return result.json()\n      })\n      .then((data) => {\n        setdata(data.results);\n      })\n      .catch(function(error){\n        console.log('something went completely wrong')\n        return; // atvirai tai nezinau ar padetu nes error negavau ^^\n      })\n    }\n  }\n\n  return (\n    <div>\n      <header>\n        <div className=\"search-content\">\n          <div className=\"search-wrap\">\n            <Movie className=\"movie-icon\"/>\n            <input \n              type=\"text\" \n              placeholder=\"Enter Movie Name\" \n              id=\"search\" \n              onChange={inputHandler}\n              value={searchText} \n            />\n          </div>\n          <Search className=\"search-icon\"/>\n        </div>\n          <SearchRez data={data} inputLength={inputLength} selectionHandler = {searchText => setsearchText(searchText)} inputTxt={searchText} clicked={clicked} selected={clicked => setclicked(clicked)}/>\n      </header>\n      <MovieInfo movieinfo={data}/>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}